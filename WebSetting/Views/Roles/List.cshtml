@model WebSetting.Models.SearchRolesViewModel
@using Common.Resources;
@{
    ViewBag.Title = "Search Role";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section HeaderScript
{

}

@section MainMenu
{
    @Html.Action("MainMenu", "MenuNavigator")
}

@section Breadcrumb
{
    <strong class="font-blue">@Resources.Lbl_Master</strong>
    <strong class="font-green-jungle">&rsaquo;&rsaquo; @Resources.Lbl_Role</strong>
}

@using (Html.BeginForm("SearchRoles", "Roles", FormMethod.Post, new { @class = "form-horizontal", @id = "form1", @DefaultButton = "btnSearch" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div id="dvForm" class="form-box">
        <h5 class="form-title">Search Role</h5>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <div class="col-md-5">
                        <p class="form-control-static text-primary">
                            Role Name
                        </p>
                    </div>
                    <div class="col-md-7 nopadding">
                        <input type="text" class="form-control input-sm input-medium" id="txtSearchRoleName" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="clear"></div>
    <div class="panel-actions">
        <div class="pull-left">
            <button id="btnAdd" type="button" class="btn btn-green btn-sm">
                <i class="fa fa-plus"></i>&nbsp;New Role
            </button>
        </div>
        <div class="pull-right">
            <div class="form-inline">
                <div class="form-group">
                    <button id="btnSearch" type="button" class="btn btn-blue btn-sm btn-xsmall">
                        <i class="fa fa-search"></i>&nbsp;Search
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="clear"></div>

    <div class="clear"></div>
    <div id="dvSearchResult">
    </div>
}
<div id="dvTarget"></div>

@section FooterScript
{
    <script type="text/javascript">
        var searchFilter;
        var successFilter;
        var pageSize = 20; // for autocomplete

        $jq(document).ready(function () {
            initializeSearchFilter();

            $jq("#form1").keypress(function (e) {
                var kCode = e.keyCode || e.charCode; //for cross browser
                if (kCode == 13) {
                    var defaultbtn = $jq(this).attr("DefaultButton");
                    $jq("#" + defaultbtn).focus();
                    $jq("#" + defaultbtn).click();
                    return false;
                }
            });


            $jq("#btnSearch").click(function (e) {
                e.preventDefault();
                clearServerErrors();

                searchFilter.RoleName = $jq("#txtSearchRoleName").val();


                loadData();
                return false;
            });

            $jq("#btnReset").click(function (e) {
                e.preventDefault();
                alert("Reset Click");
                $jq("#dvForm input[type='text'],#dvForm select").val('');
                $jq("#dvSearchResult").html('');
                clearServerErrors();
                return false;
            });

            $jq('#btnAdd').click(function (e) {
                $jq("#dvLoading").show();
                var actionUrl = "@Url.Action("NewRole", "Roles")";
                $jq('#dvTarget').html('');
                $jq('#dvTarget').append('<form action="' + actionUrl + '" method="POST" class="hidden"></form>');
                $jq('#dvTarget form').submit();
            });
        });

        function initializeSearchFilter() {
            searchFilter = {
                RoleName: $jq("#txtSearchRoleName").val(),
                PageNo: '@Model.SearchFilter.PageNo',
                PageSize: '@Model.SearchFilter.PageSize',
                SortField: '@Model.SearchFilter.SortField',
                SortOrder: '@Model.SearchFilter.SortOrder'
            };
            successFilter = searchFilter;
        };

        function onEditClick(roleId) {
            var actionUrl = '@Url.Action("EditRole", "Roles")';
            $jq('#dvTarget').html('');
            var input = $jq("<input>").attr("type", "hidden").attr("name", "roleId").val(roleId);
            $jq('#dvTarget').append('<form action="' + actionUrl + '" method="POST" class="hidden"></form>');
            $jq('#dvTarget form').append($jq(input));
            $jq('#dvTarget form').submit();
        }

        function initializePaging() {
            $jq("#dvSearchResult .input-page").change(function (event) {
                searchFilter = successFilter;
                searchFilter.PageNo = $jq(this).val();
                loadData();
                return false;
            }).keypress(function (event) {
                return validateDigit(event);
            });

            $jq("#dvSearchResult #pagesizelist").change(function (event) {
                searchFilter = successFilter;
                searchFilter.PageNo = "1";
                searchFilter.PageSize = $jq(this).val();
                loadData();
                return false;
            });

            $jq('#dvSearchResult .pagination ul li a').on('click', function (event) {
                searchFilter = successFilter;
                searchFilter.PageNo = getUrlParameter($jq(this).attr("href"), "page");
                loadData();
                return false;
            });
        };

        function loadData() {

            if (searchFilter.RoleName == "") {
                var warningMsg = '@Resources.Msg_EnteredAtLeastOneCriteria';
                doModal('dvAlertMsg', 'Message Dialog', warningMsg, '', '');
                return false;
            }

            $jq.ajax({
                url: '@Url.Action("SearchRole", "Roles")',
                type: "POST",
                data: addAntiForgeryToken(searchFilter),
                beforeSend: function () { $jq("#dvLoading").show(); },
                complete: function () { $jq("#dvLoading").hide(); },
                success: function (result) {
                    if (result.Valid == null) {
                        $jq("#dvSearchResult").html('');
                        successFilter = searchFilter;
                        $jq("#dvSearchResult").html(result);
                        initializePaging();
                    } else {
                        showServerErrors(result);
                    }
                },
                error: function (xhr) {
                    var handleMsg = '@Common.Resources.Resources.Error_System';
                    ajaxErrorHandling(xhr, handleMsg, '@FormsAuthentication.LoginUrl', '@Url.Action("AccessDenied", "User")');
                }
            });

            return false;
        };

    function sortField(selectedSortField) {
        if (selectedSortField == searchFilter.SortField)
            searchFilter.SortOrder = (searchFilter.SortOrder == 'ASC') ? 'DESC' : 'ASC';
        else
            searchFilter.SortOrder = 'ASC';
        searchFilter.SortField = selectedSortField;
        searchFilter.PageNo = 1;
        loadData();
    }
    </script>
}
